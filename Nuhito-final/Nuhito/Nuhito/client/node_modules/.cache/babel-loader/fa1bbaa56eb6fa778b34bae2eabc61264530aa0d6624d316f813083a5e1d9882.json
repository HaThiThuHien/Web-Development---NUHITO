{"ast":null,"code":"var _jsxFileName = \"D:\\\\NT208.O11.ANTN_Web\\\\Nuhito\\\\client\\\\src\\\\components\\\\mainpages\\\\cart\\\\PayPal.js\";\nimport React from 'react';\nimport PaypalExpressBtn from 'react-paypal-express-checkout';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class MyApp extends React.Component {\n  render() {\n    const onSuccess = payment => {\n      // Congratulation, it came here means everything's fine!\n      console.log(\"The payment was succeeded!\", payment);\n      // You can bind the \"payment\" object's value to your state or props or whatever here, please see below for sample returned data\n    };\n    const onCancel = data => {\n      // User pressed \"cancel\" or close Paypal's popup!\n      console.log('The payment was cancelled!', data);\n      // You can bind the \"data\" object's value to your state or props or whatever here, please see below for sample returned data\n    };\n    const onError = err => {\n      // The main Paypal's script cannot be loaded or somethings block the loading of that script!\n      console.log(\"Error!\", err);\n      // Because the Paypal's main script is loaded asynchronously from \"https://www.paypalobjects.com/api/checkout.js\"\n      // => sometimes it may take about 0.5 second for everything to get set, or for the button to appear\n    };\n    let env = 'sandbox'; // you can set here to 'production' for production\n    let currency = 'USD'; // or you can set this value from your props or state\n    let total = 1; // same as above, this is the total amount (based on currency) to be paid by using Paypal express checkout\n    // Document on Paypal's currency code: https://developer.paypal.com/docs/classic/api/currency_codes/\n\n    const client = {\n      sandbox: 'AShELslT1WPSRdSFds8e3x4z0HGdFWr_XskIT-TSyOtzDWkYzRPK9gJGoA8xgYNAVHXN34oaKqf00IKG',\n      production: 'YOUR-PRODUCTION-APP-ID'\n    };\n    // In order to get production's app-ID, you will have to send your app to Paypal for approval first\n    // For sandbox app-ID (after logging into your developer account, please locate the \"REST API apps\" section, click \"Create App\"):\n    //   => https://developer.paypal.com/docs/classic/lifecycle/sb_credentials/\n    // For production app-ID:\n    //   => https://developer.paypal.com/docs/classic/lifecycle/goingLive/\n\n    // NB. You can also have many Paypal express checkout buttons on page, just pass in the correct amount and they will work!\n    return /*#__PURE__*/_jsxDEV(PaypalExpressBtn, {\n      env: env,\n      client: client,\n      currency: currency,\n      total: total,\n      onError: onError,\n      onSuccess: onSuccess,\n      onCancel: onCancel\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this);\n  }\n}","map":{"version":3,"names":["React","PaypalExpressBtn","jsxDEV","_jsxDEV","MyApp","Component","render","onSuccess","payment","console","log","onCancel","data","onError","err","env","currency","total","client","sandbox","production","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["D:/NT208.O11.ANTN_Web/Nuhito/client/src/components/mainpages/cart/PayPal.js"],"sourcesContent":["import React from 'react';\r\nimport PaypalExpressBtn from 'react-paypal-express-checkout';\r\n \r\nexport default class MyApp extends React.Component {\r\n    render() {\r\n        const onSuccess = (payment) => {\r\n            // Congratulation, it came here means everything's fine!\r\n            \t\tconsole.log(\"The payment was succeeded!\", payment);\r\n            \t\t// You can bind the \"payment\" object's value to your state or props or whatever here, please see below for sample returned data\r\n        }\r\n \r\n        const onCancel = (data) => {\r\n            // User pressed \"cancel\" or close Paypal's popup!\r\n            console.log('The payment was cancelled!', data);\r\n            // You can bind the \"data\" object's value to your state or props or whatever here, please see below for sample returned data\r\n        }\r\n \r\n        const onError = (err) => {\r\n            // The main Paypal's script cannot be loaded or somethings block the loading of that script!\r\n            console.log(\"Error!\", err);\r\n            // Because the Paypal's main script is loaded asynchronously from \"https://www.paypalobjects.com/api/checkout.js\"\r\n            // => sometimes it may take about 0.5 second for everything to get set, or for the button to appear\r\n        }\r\n \r\n        let env = 'sandbox'; // you can set here to 'production' for production\r\n        let currency = 'USD'; // or you can set this value from your props or state\r\n        let total = 1; // same as above, this is the total amount (based on currency) to be paid by using Paypal express checkout\r\n        // Document on Paypal's currency code: https://developer.paypal.com/docs/classic/api/currency_codes/\r\n \r\n        const client = {\r\n            sandbox:    'AShELslT1WPSRdSFds8e3x4z0HGdFWr_XskIT-TSyOtzDWkYzRPK9gJGoA8xgYNAVHXN34oaKqf00IKG',\r\n            production: 'YOUR-PRODUCTION-APP-ID',\r\n        }\r\n        // In order to get production's app-ID, you will have to send your app to Paypal for approval first\r\n        // For sandbox app-ID (after logging into your developer account, please locate the \"REST API apps\" section, click \"Create App\"):\r\n        //   => https://developer.paypal.com/docs/classic/lifecycle/sb_credentials/\r\n        // For production app-ID:\r\n        //   => https://developer.paypal.com/docs/classic/lifecycle/goingLive/\r\n \r\n        // NB. You can also have many Paypal express checkout buttons on page, just pass in the correct amount and they will work!\r\n        return (\r\n            <PaypalExpressBtn env={env} client={client} currency={currency} total={total} onError={onError} onSuccess={onSuccess} onCancel={onCancel} />\r\n        );\r\n    }\r\n}"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,gBAAgB,MAAM,+BAA+B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7D,eAAe,MAAMC,KAAK,SAASJ,KAAK,CAACK,SAAS,CAAC;EAC/CC,MAAMA,CAAA,EAAG;IACL,MAAMC,SAAS,GAAIC,OAAO,IAAK;MAC3B;MACEC,OAAO,CAACC,GAAG,CAAC,4BAA4B,EAAEF,OAAO,CAAC;MAClD;IACN,CAAC;IAED,MAAMG,QAAQ,GAAIC,IAAI,IAAK;MACvB;MACAH,OAAO,CAACC,GAAG,CAAC,4BAA4B,EAAEE,IAAI,CAAC;MAC/C;IACJ,CAAC;IAED,MAAMC,OAAO,GAAIC,GAAG,IAAK;MACrB;MACAL,OAAO,CAACC,GAAG,CAAC,QAAQ,EAAEI,GAAG,CAAC;MAC1B;MACA;IACJ,CAAC;IAED,IAAIC,GAAG,GAAG,SAAS,CAAC,CAAC;IACrB,IAAIC,QAAQ,GAAG,KAAK,CAAC,CAAC;IACtB,IAAIC,KAAK,GAAG,CAAC,CAAC,CAAC;IACf;;IAEA,MAAMC,MAAM,GAAG;MACXC,OAAO,EAAK,kFAAkF;MAC9FC,UAAU,EAAE;IAChB,CAAC;IACD;IACA;IACA;IACA;IACA;;IAEA;IACA,oBACIjB,OAAA,CAACF,gBAAgB;MAACc,GAAG,EAAEA,GAAI;MAACG,MAAM,EAAEA,MAAO;MAACF,QAAQ,EAAEA,QAAS;MAACC,KAAK,EAAEA,KAAM;MAACJ,OAAO,EAAEA,OAAQ;MAACN,SAAS,EAAEA,SAAU;MAACI,QAAQ,EAAEA;IAAS;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAEpJ;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}